AWSTemplateFormatVersion: '2010-09-09'
Description: >
    This template creates a Lex bot, a Lambda Function and associated resources
    required for the execution of Coordibot.

#
# Parameters required to execute the Lambda function
#
Parameters:
  # Environment variables for Lambda function
  SlackToken:
    Type: String
    Description: Token generated by Slack to connect with the Lambda Function.
    AllowedPattern: '^xox[p|b|o|a]-[0-9]{9,12}-[0-9]{9,12}-[0-9]{9,12}-[a-z0-9]{32}$'
    ConstraintDescription: >
      This token allows the Lambda function to retrieve information from users interacting with the bot.

  CoordibotTimezone:
    Type: String
    Description: Timezone displayed by Coordibot.
    Default: America/Mexico_City

  InterviewersArray:
    Type: String
    Description: Array of strings, cointaining the list of Google account to query.
    Default: "[]"

  GoogleConfiguration:
    Type: String
    Description: Object containing the Google configuration to allow access to the organization.

  # Lambda function code
  LambdaCodeBucket:
    Description: S3 bucket where the Coordibot Lambda bundle is located.
    Type: String
    Default: coordibot

  LambdaCodeObject:
    Type: String
    Description: >
        S3 object zip file containing Coordibot's Lambda resource functions.
    Default: Lambda.zip

  # Lambda function configuration
  CoordibotHandler:
    Type: String
    Description: >
        Function's name the Lambda Function is invoking.
    Default: dist/index.mainHandler

#
# Resources definition
#
Resources:
  CoordibotFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: !Ref CoordibotHandler
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref LambdaCodeObject
      Runtime: nodejs8.10
      Environment:
          Variables:
            GOOGLE_CONFIG: !Ref GoogleConfiguration
            INTERVIEWERS: !Ref InterviewersArray
            SLACK_TOKEN: !Ref SlackToken
            TZ: !Ref CoordibotTimezone

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
